/**
 * rahul-weather-project v0.1.0 ()
 * Copyright 2017 Rahul Shukla
 * Licensed under MIT
 */
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}();!function(e,t){var a=function(){function e(t){"ngInject";_classCallCheck(this,e),this.weatherService=t}return _createClass(e,[{key:"$onInit",value:function(){this.cityToSearch="Sydney",this.unit="c",this.showError=!1,this.getWeatherData()}},{key:"getWeatherData",value:function(){var e=this;this.weatherService.getWeatherData(this.cityToSearch,this.unit).then(function(t){null!==t.results?(e.showError=!1,e.weatherDetails=t.results.channel,e.formattedCity=e.weatherDetails.location.city+", \n                                        "+e.weatherDetails.location.region+", \n                                        "+e.weatherDetails.location.country):e.showError=!0})}},{key:"updateWeather",value:function(){this.weatherDetails=void 0,""!==this.cityToSearch&&this.getWeatherData()}}]),e}();a.$inject=["weatherService"],t.module("rahulWeatherProject.components",[]).component("weatherComponent",{templateUrl:"weatherhome.html",controller:a})}(window,window.angular),function(e,t,a){t.module("rahulWeatherProject",["rahulWeatherProject.components","rahulWeatherProject.services","rahulWeatherProject.templates"])}(window,window.angular);var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}();!function(e,t){var a=function(){function e(t){"ngInject";_classCallCheck(this,e),this.$http=t}return _createClass(e,[{key:"getWeatherData",value:function(e,t){return this.$http.get("https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22"+e+"%22)%20and%20u='"+t+"'&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys").then(function(e){return e.data.query})["catch"](function(e){return e})}}],[{key:"weatherFactory",value:function(t){return new e(t)}}]),e}();a.$inject=["$http"],t.module("rahulWeatherProject.services",[]).factory("weatherService",a.weatherFactory)}(window,window.angular),angular.module("rahulWeatherProject.templates",[]).run(["$templateCache",function(e){e.put("weatherhome.html",'<header ng-class="{\'cloudyHeader\': $ctrl.weatherDetails.item.condition.text.toLowerCase().indexOf(\'showers\')>-1 ||\n                                $ctrl.weatherDetails.item.condition.text.toLowerCase().indexOf(\'cloudy\')>-1}">\n    <h1>City weather</h1>\n    <p>By: Rahul Shukla</p>\n</header>\n<div class="main" ng-class="{\'cloudyBody\': $ctrl.weatherDetails.item.condition.text.toLowerCase().indexOf(\'showers\')>-1 ||\n                                $ctrl.weatherDetails.item.condition.text.toLowerCase().indexOf(\'cloudy\')>-1}">\n    <div class="container">\n        <div class="inputPanel">\n            <input type="text" ng-model="$ctrl.cityToSearch" placeholder="City name e.g. Bangalore">\n            <select ng-model="$ctrl.unit" ng-change="$ctrl.updateWeather()">\n                <option value="c">°C</option>\n                <option value="f">°F</option>\n            </select>\n            <input type="button" ng-click="$ctrl.updateWeather()" value="Update">\n            <div class="loader" ng-if="!$ctrl.weatherDetails && !$ctrl.showError"></div>\n            <div class="msg" ng-if="!$ctrl.weatherDetails && !$ctrl.showError">Loading ...</div>\n            <div class="msg" ng-if="$ctrl.showError">Sorry, could not find the city.</div>\n        </div>\n        <div class="weatherDetails animate-bottom" ng-if="$ctrl.weatherDetails">\n            <div class="cityTitle">{{$ctrl.formattedCity}}</div>\n            <div class="cityTemp">\n                {{$ctrl.weatherDetails.item.condition.temp}}°{{$ctrl.weatherDetails.units.temperature}}\n                <div class="cityCondition">{{$ctrl.weatherDetails.item.condition.text}}</div>\n            </div>\n            <ul class="conditionList">\n                <!--<li>Current Temperature : {{$ctrl.weatherDetails.item.condition.temp}}°{{$ctrl.weatherDetails.units.temperature}}</li>-->\n                <li>Sunrise : {{$ctrl.weatherDetails.astronomy.sunrise}}</li>\n                <li>Sunset : {{$ctrl.weatherDetails.astronomy.sunset}}</li>\n                <li>Humidity : {{$ctrl.weatherDetails.atmosphere.humidity}}%</li>\n                <li>Visibility : {{$ctrl.weatherDetails.atmosphere.visibility}}%</li>\n                <li>Wind:\n                    <ul class="ulWind">\n                        <li>Chill : {{$ctrl.weatherDetails.wind.chill}}°F</li>\n                        <li>Direction : {{$ctrl.weatherDetails.wind.direction}}°</li>\n                        <li>Speed : {{$ctrl.weatherDetails.wind.speed}} {{$ctrl.weatherDetails.units.speed}}</li>\n                    </ul>\n                </li>\n            </ul>\n            <div class="forecastTitle">Forecast for next 10 days</div>\n            <ul class="forecastList">\n                <li ng-repeat="forecast in $ctrl.weatherDetails.item.forecast">\n                    <div class="forecastDay">{{forecast.day}}</div>\n                    <div class="forecastDate">{{forecast.date}}</div>\n                    <div>High: {{forecast.high}}°{{$ctrl.weatherDetails.units.temperature}}</div>\n                    <div>Low: {{forecast.low}}°{{$ctrl.weatherDetails.units.temperature}}</div>\n                    <div class="forecastText">{{forecast.text}}</div>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n\n\n')}]);